I"†<p>Over the past few years technology has boomed and the general technical aptitude of companies has improved. With this increase in technical aptitude, the traditional ways of creating documentation are also shifting. In this post we will look at the traditional way of documentation by using a Content Management System (CMS) and a more modern approach, which takes advantage of some of the great developer tools out there.</p>

<h2 id="setting-the-bar">Setting the Bar</h2>

<p>A few years ago I made it to the final round of interviews with Amazonâ€™s infamous Lab126 for a Senior Technical Writer position for Alexa Auto. During the interview it became clear that the requsite technical knowledge was something that I lacked, and in one of the interviews I was introduced to an interesting way to think about the differences between technical writers. Essentially there are three types:</p>

<ol>
  <li>Writer first, technolgy second.</li>
  <li>Technology first, writer second.</li>
  <li>Middle of the pack at both.</li>
</ol>

<p>Of the three, the one that excels is the writer first. The reason I believe this is because if you do not have a technical background, but you learn the technologies that you will be documenting and can provide crisp examples, you will have an advantage due to writing ability. In other words, you MUST learn the tech.</p>

<h3 id="technology-must-havs">Technology Must Havs</h3>

<div class="post-image-container">
    <img class="post-image" src="images/diff.png" />
</div>

<h2 id="closing-thoughts">Closing Thoughts</h2>

<p>This post is designed as an introduction to docs as code. In the next post <a href="/tw-essentials">Technical Writing Essentials</a>, we will look at job descriptions from some top companies, which strengthen the case for docs as code. Additionally, the post will cover some of the requisite skills and resume builders for a career as a Technical Writer.</p>
:ET
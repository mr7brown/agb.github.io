I"<p>The purpose of this post is to highlight why documentation management is important and how we can achieve effective documentation by creating logical information architecture.</p>

<p>We can start by understanding the Inverted Pyramid.</p>

<p>Unlike other documentation where the goal is to get readers to stay on the page for as long as possible, technical docmentation follows a different flow. For example, how many times have you clicked on a headline to read a specific portion of the article, only to find a tiny blurb near the end of the article?</p>

<p>If you’re like me, this happens often and it’s pretty annoying. It is especially annoying in technical or informative reading materials, and that’s why technical writers often use an inverted writing style.</p>

<h2 id="inverted-pyramid">Inverted Pyramid</h2>

<p>An inverted writing style or inverted pyramid approach essentially means that the most important information comes first and becomes more general as the material progresses.</p>

<div class="post-image-container">
    <img class="post-image" style="height: 500px" src="images/pyramid.jpeg" />
</div>

<p>The reason this is essential for information architecture is because it aligns with how we interact with information. For example, most people do not read documentation in its entirety, instead, they skim. And for the people that are reading technical documentation, there is a high chance that the reader is looking for a specific piece of information. Make it easy for them.</p>

<h2 id="information-architecture">Information Architecture</h2>

<p>Now that we established the inverted pyramid as the foundation, we can begin building the other aspects of technical documentation. The next step and the glue to the different methods for documentation management is information architecture.</p>

<p>One way to think of this term is to think of a web of information, and within each web you need to solve:</p>

<ol>
  <li>What is the most important information?</li>
  <li>How will users interact with the content?</li>
  <li>What is the best medium to house and display the content?</li>
</ol>

<p>Once you answer some of the foundational questions, you can then begin figuring out how the pieces fit together. For example, if you have collections of loosely related material, you may need a knowledge base. If you have a documentation set that is more of a program, then you may need to host a documentation portal (static or otherwise). Or, maybe you have a library of unrelated documents that can be effectively managed with a simple Content Management System (CMS) like SharePoint.</p>

<p>Let’s briefly look at all three before wrapping this post up.</p>

<h2 id="knowledge-base">Knowledge Base</h2>

<div class="post-image-container">
    <img class="post-image" style="height: 700px" src="images/kb.png" />
</div>

<h2 id="documentation-portals-static-sites">Documentation Portals (Static Sites)</h2>

<div class="post-image-container">
    <img class="post-image" src="images/static.png" />
</div>

<h2 id="cms">CMS</h2>

:ET